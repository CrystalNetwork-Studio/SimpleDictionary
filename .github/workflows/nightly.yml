name: Nightly Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * *" # Run at midnight UTC every day

jobs:
  analyze:
    name: Analyze and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze --no-fatal-infos

      # Report analysis results to PR
      - name: Report analysis status
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.issue.number;

            // Get PR details to check changed files
            const { data: pullRequest } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: prNumber
            });

            // Get list of changed files
            const { data: changedFiles } = await github.rest.pulls.listFiles({
              owner,
              repo,
              pull_number: prNumber
            });

            // Create a summary of the analysis
            let summary = "## Flutter Analysis Results\n\n";

            if (context.job.status === 'success') {
              summary += "✅ All checks passed successfully!\n";
            } else {
              summary += "❌ Some checks failed. Please fix the issues before merging.\n\n";
              summary += "### Changed Files\n";

              // List changed files
              if (changedFiles.length > 0) {
                changedFiles.forEach(file => {
                  summary += `- \`${file.filename}\` (${file.status})\n`;
                });
              } else {
                summary += "No files changed in this PR.\n";
              }
            }

            // Post comment to PR
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: summary
            });

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: analyze # Only build if analysis passes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --split-per-abi

      - name: Rename APK files
        run: |
          mkdir -p build/outputs
          cp build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/outputs/apk/SimpleDictionary-Nightly-arm64-v8a.apk
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/outputs/apk/SimpleDictionary-Nightly-armeabi-v7a.apk
          cp build/app/outputs/flutter-apk/app-x86_64-release.apk build/outputs/apk/SimpleDictionary-Nightly-x86_64.apk

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apk-files
          path: |
            build/outputs/apk/SimpleDictionary-Nightly-arm64-v8a.apk
            build/outputs/apk/SimpleDictionary-Nightly-armeabi-v7a.apk
            build/outputs/apk/SimpleDictionary-Nightly-x86_64.apk

      # Report build results to PR
      - name: Report build status
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.issue.number;

            // Create a summary of the build
            let summary = "## Build Results\n\n";

            if (context.job.status === 'success') {
              summary += "✅ Build completed successfully!\n";
              summary += "\nAPK files are available as artifacts in this workflow run.\n";
            } else {
              summary += "❌ Build failed. Please check the logs for details.\n";
            }

            // Post comment to PR
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: summary
            });
